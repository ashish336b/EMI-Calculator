{"version":3,"sources":["components/Body.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Body","props","setPrincipal","event","setState","principal","target","value","setRate","rate","setTime","time","calculateEmi","monthlyRate","state","numerator","Math","pow","denumerator","e","tableData","interest","principalPaid","remainingBalance","push","parseFloat","toFixed","totalPaid","i","totalEmi","this","tableItem","map","el","key","round","abs","className","onChange","onBlur","type","placeholder","onClick","Component","Navbar","title","App","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1d634010.chunk.js","sourcesContent":["import { parse } from \"path\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Body extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      principal: \"250000\",\r\n      rate: \"10\",\r\n      time: \"3\",\r\n      totalEmi: \"\",\r\n      tableData: [],\r\n    };\r\n  }\r\n  setPrincipal = (event) => {\r\n    this.setState({\r\n      principal: event.target.value,\r\n    });\r\n  };\r\n  setRate = (event) => {\r\n    this.setState({ rate: event.target.value });\r\n  };\r\n  setTime = (event) => {\r\n    this.setState({ time: event.target.value });\r\n  };\r\n  calculateEmi = () => {\r\n    let monthlyRate = this.state.rate / 1200;\r\n    let numerator = Math.pow(1 + monthlyRate, this.state.time);\r\n    let denumerator = numerator - 1;\r\n    let e = this.state.principal * monthlyRate * (numerator / denumerator);\r\n    //\r\n    let tableData = [];\r\n    let interest = monthlyRate * this.state.principal;\r\n    let principalPaid = e - interest;\r\n    let remainingBalance = this.state.principal - principalPaid;\r\n    tableData.push({\r\n      interest: parseFloat(interest).toFixed(2),\r\n      principal: parseFloat(principalPaid).toFixed(2),\r\n      remainingBalance: parseFloat(remainingBalance).toFixed(2),\r\n      totalPaid: parseFloat(e).toFixed(2),\r\n    });\r\n    for (let i = 1; i < this.state.time; i++) {\r\n      interest = monthlyRate * remainingBalance;\r\n      principalPaid = e - interest;\r\n      remainingBalance = remainingBalance - principalPaid;\r\n      tableData.push({\r\n        interest: parseFloat(interest).toFixed(2),\r\n        principal: parseFloat(principalPaid).toFixed(2),\r\n        remainingBalance: parseFloat(remainingBalance).toFixed(2),\r\n        totalPaid: parseFloat(e).toFixed(2),\r\n      });\r\n    }\r\n    this.setState({\r\n      totalEmi: parseFloat(e).toFixed(2),\r\n      tableData: tableData,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.calculateEmi();\r\n  }\r\n  render() {\r\n    const tableItem = this.state.tableData.map((el, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td>{i + 1}</td>\r\n          <td>{Math.round(el.principal)}</td>\r\n          <td>{Math.round(el.interest)}</td>\r\n          <td>{Math.round(el.totalPaid)}</td>\r\n          <td>{Math.abs(Math.round(el.remainingBalance))}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <section className=\"form-container py-3\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-6\">\r\n                        <div className=\"form-group py-2\">\r\n                          <label className=\"pr-3\">Principle :</label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            value={this.state.principal}\r\n                            onChange={this.setPrincipal}\r\n                            onBlur={this.calculateEmi}\r\n                            type=\"number\"\r\n                            placeholder=\"Principal Amount\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group py-2\">\r\n                          <label className=\"pr-3\">Interest Rate :</label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            onChange={this.setRate}\r\n                            onBlur={this.calculateEmi}\r\n                            value={this.state.rate}\r\n                            type=\"number\"\r\n                            placeholder=\"Interest\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group py-2\">\r\n                          <label className=\"pr-3\">Time</label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            onChange={this.setTime}\r\n                            value={this.state.time}\r\n                            onBlur={this.calculateEmi}\r\n                            placeholder=\"Time\"\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-info\"\r\n                          onClick={this.calculateEmi}\r\n                        >\r\n                          Calculate\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-lg-6\">\r\n                        <div className=\"border p-1 m-3\">\r\n                          <h5 className=\"text-center\">Loan EMI</h5>\r\n                          <p className=\"text-center\">\r\n                            Rs. {this.state.totalEmi}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"border p-1 m-3\">\r\n                          <h5 className=\"text-center\">\r\n                            Total Interest Payable\r\n                          </h5>\r\n                          <p className=\"text-center\">Rs. 1000</p>\r\n                        </div>\r\n                        <div className=\"border p-1 m-3\">\r\n                          <h5 className=\"text-center\">Total Payment</h5>\r\n                          <p className=\"text-center\">Rs. 1000</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"container-fluid p-3\">\r\n                <table className=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Month</th>\r\n                      <th>Principal</th>\r\n                      <th>Interest</th>\r\n                      <th>Total Payment</th>\r\n                      <th>Balance</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{tableItem}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"nav-container\">\r\n          <ul className=\"nav bg-info p-3 justify-content-center\">\r\n            <div className=\"nav-item\">\r\n              <h4 className=\"text-light\">{this.props.title}</h4>\r\n            </div>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Body from \"./components/Body\";\r\nimport Navbar from \"./components/Navbar\";\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: 0,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar title=\"EMI Calculator\" />\r\n        <Body />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}